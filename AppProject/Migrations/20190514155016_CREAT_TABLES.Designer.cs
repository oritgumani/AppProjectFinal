// <auto-generated />
using AppProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AppProject.Migrations
{
    [DbContext(typeof(AppProjectContext))]
    [Migration("20190514155016_CREAT_TABLES")]
    partial class CREAT_TABLES
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppProject.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("AppProject.Models.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ColorName");

                    b.HasKey("ColorId");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("AppProject.Models.ConectTable", b =>
                {
                    b.Property<int>("DetailesId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ColorId");

                    b.Property<int>("MartId");

                    b.Property<int>("ProductId");

                    b.Property<int>("SizeId");

                    b.HasKey("DetailesId");

                    b.HasIndex("ColorId");

                    b.HasIndex("MartId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.ToTable("ConectTable");
                });

            modelBuilder.Entity("AppProject.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<int>("CreditCard");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Mail");

                    b.Property<int>("MartId");

                    b.Property<string>("Password");

                    b.Property<int>("PhoneNumber");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("AppProject.Models.Mart", b =>
                {
                    b.Property<int>("MartId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CustomerId");

                    b.Property<int?>("CustomerId1");

                    b.HasKey("MartId");

                    b.HasIndex("CustomerId1");

                    b.ToTable("Mart");
                });

            modelBuilder.Entity("AppProject.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AmountInStock");

                    b.Property<int>("AmountOfOrders");

                    b.Property<double>("DeliveryPrice");

                    b.Property<string>("ImgId");

                    b.Property<double>("Price");

                    b.Property<string>("ProductName");

                    b.Property<int>("SubCategoryId");

                    b.HasKey("ProductId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("AppProject.Models.Size", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SizeName");

                    b.HasKey("SizeId");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("AppProject.Models.SubCategory", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<string>("SubName");

                    b.HasKey("SubCategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategory");
                });

            modelBuilder.Entity("AppProject.Models.ConectTable", b =>
                {
                    b.HasOne("AppProject.Models.Color", "Colors")
                        .WithMany("Detail")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppProject.Models.Mart", "Marts")
                        .WithMany("Detail")
                        .HasForeignKey("MartId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppProject.Models.Product", "Products")
                        .WithMany("Detail")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppProject.Models.Size", "Sizes")
                        .WithMany("Detail")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AppProject.Models.Mart", b =>
                {
                    b.HasOne("AppProject.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId1");
                });

            modelBuilder.Entity("AppProject.Models.Product", b =>
                {
                    b.HasOne("AppProject.Models.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AppProject.Models.SubCategory", b =>
                {
                    b.HasOne("AppProject.Models.Category", "Categories")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
